#!/usr/bin/python3
#	raptor-cheat - Cheat program for Raptor: Call of the Shadows
#	Copyright (C) 2019-2019 Johannes Bauer
#
#	This file is part of raptor-cheat.
#
#	raptor-cheat is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	raptor-cheat is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with raptor-cheat; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import itertools

def deduce_stream_from_known_plaintext(ciphertext, plaintext):
	stream = bytearray()
	offset = 0
	for (c, p) in zip(ciphertext, plaintext):
		stream_byte = c - p - offset
		offset += p
		stream.append(stream_byte & 0xff)
	return stream

def decrypt(ciphertext, stream):
	plaintext = bytearray()
	offset = 0
	for (c, s) in zip(ciphertext, stream):
		p = c - s - offset
		offset += p
		plaintext.append(p & 0xff)
	return plaintext


def gen_stream():
	offsets = [ 0xad, 0xac, 0xb4, 0xbb, 0xbd, 0xbf ]
	value = 0x82
	index = 0
	while True:
		yield value
		value = (value - offsets[index]) & 0xff
		index += 1
		if index == len(offsets):
			index = 0



ciphertext = bytes.fromhex("c3 57 ec 79 ff 83 05 99  2e bb 41 c5 47 db 70 fd")
plaintext = b"AAAAAAAAAAAAAAAA"
stream = deduce_stream_from_known_plaintext(ciphertext, plaintext)
print("Stream:", " ".join("%02x" % (c) for c in stream))

stream = bytes(itertools.islice(gen_stream(), 100))
print("Stream:", " ".join("%02x" % (c) for c in stream))

#for (x, y) in zip(stream, stream[1:]):
#	z = (x - y) & 0xff
#	print("%02x %02x: %02x" % (x, y, z))

with open("CHAR0000.FIL", "rb") as f:
	ciphertext = f.read()

#ciphertext = bytes.fromhex("c3 65 01 8e 21 b2 38 de  32 7e c3 06 47 9a ee 3a")
#ciphertext = bytes.fromhex("D3 67 14 B7  4F EA 70 07  9E 3C C7 60  A1 F4 48 94  D9 1C 5D B0  45 D2 58 DC  5E F2 87 14")
plaintext = decrypt(ciphertext, stream)
print(plaintext)

with open("plain", "wb") as f:
	f.write(plaintext)

#cipher = bytes.fromhex("c3 65 01 8e 21 b2 38 de ")
#plain = b"AAAAAAAAAAAAAA"
#stream = bytes((x - y) & 0xff for (x, y) in zip(cipher, plain))
#
#cipher = bytes.fromhex("cc 6e 0a 97 2a bb 41 e7  3b 87 cc 0f 50 a3 f7 43")
#plain = bytes((x - y) & 0xff for (x, y) in zip(cipher, stream))
#print(plain)
